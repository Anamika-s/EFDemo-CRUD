// <auto-generated />
using System;
using EFDemo_CRUD.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFDemo_CRUD.Migrations
{
    [DbContext(typeof(BatchDbContext))]
    [Migration("20230511082947_Added")]
    partial class Added
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFDemo_CRUD.Models.Batch", b =>
                {
                    b.Property<int>("BatchCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchCode"));

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BatchName");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Trainer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TrainerName");

                    b.HasKey("BatchCode");

                    b.ToTable("tblBatches");
                });

            modelBuilder.Entity("EFDemo_CRUD.Models.Grade", b =>
                {
                    b.Property<int>("GradeCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Grade");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeCode"));

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("G1")
                        .HasColumnName("Name");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeCode");

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("EFDemo_CRUD.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("BatchCode")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("BatchCode");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EFDemo_CRUD.Models.Student", b =>
                {
                    b.HasOne("EFDemo_CRUD.Models.Batch", "Batch")
                        .WithMany()
                        .HasForeignKey("BatchCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");
                });
#pragma warning restore 612, 618
        }
    }
}
